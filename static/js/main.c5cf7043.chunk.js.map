{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","onChange","type","pattern","title","required","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","contact","uuidv4","some","toLowerCase","alert","prevState","deleteContact","contactId","changeFilter","getCurrentContacts","normalizeFilterRequest","includes","currentContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5cf7043.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange}></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Components\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.state.contacts.some(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts.`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getCurrentContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilterRequest = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilterRequest)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const currentContactList = this.getCurrentContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={currentContactList}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}